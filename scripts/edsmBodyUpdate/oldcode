	for (i = 0; i < bodies.length; i++) {
		logger.info(`Updating information on Body ID: ${bodies[i].id} [${i + 1}/${bodies.length}]`)
		let response;
		// Check cache in case we already asked for the system
		let cache;
		edsmSystems.find(system => {
			if (system.name) {
				if (system.name.toUpperCase() === bodies[i].system.systemName){
					logger.info('--> System in cache, looking for body')
					cache = system
				}
			}
		});

		if (!cache) {
			logger.info('--> System not in cache, asking EDSM');
			response = await edsm.getBodyEDSM(bodies[i].system.systemName);
			edsmSystems.push(await response);
		} else {
			response = cache
		}

		//console.log(edsmSystems)

		if (!response || response == [] || response == {}) {
			logger.info('<-- System not found, updating CAPI with skip count');

			// let skipCount = 0;
			// if (typeof bodies[i].missingSkipCount !== 'integer') {
			// 	skipCount = 1;
			// } else {
			// 	skipCount = skipCount + 1;
			// }

			// await capi.updateSystem(
			// 	systems[i].id,
			// 	{
			// 		missingSkipCount: skipCount,
			// 	},
			// 	jwt
			// );
		} else {
			let bodyData;
			for (b = 0; b < response.bodies.length; b++){
				if (response.bodies[b].name.toUpperCase() === bodies[i].bodyName) {
					logger.info('<-- Body Found, updating CAPI with new data');
					bodyData = response.bodies[b]
				}
			}

			if (!bodyData) {
				logger.info('<-- Body not found, updating CAPI with skip count');
			}
			// let newData = await utils.processSystem('edsm', response);

			// if (newData.edsmCoordLocked === false && isForced === false) {
			// 	if (typeof systems[i].missingSkipCount !== 'number') {
			// 		newData.missingSkipCount = 1;
			// 	} else {
			// 		newData.missingSkipCount = systems[i].missingSkipCount + 1;
			// 	}
			// } else if (isForced === false) {
			// 	newData.missingSkipCount = 0;
			// }
			// await capi.updateSystem(systems[i].id, newData, jwt);
		}